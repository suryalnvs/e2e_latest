#!/usr/bin/python2.7
import shlex
import sys
import subprocess
import unittest
from subprocess import Popen, PIPE


class TestCli(unittest.TestCase):

    def test_createChannel(self):
        cmd = "./scripts/script.sh %s %s %s %s create"% (CHANNEL_NAME, CHANNELS, CHAINCODES, ENDORSERS)
        print cmd
        p = Popen(cmd, shell=True, stdout=PIPE, stderr=PIPE)
        output = p.communicate()[0]
        print output
        print(p.returncode)
        self.assertEqual(p.returncode, 0)

#osstdout = subprocess.Popen(cmd, shell=True, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, close_fds=True)
#theInfo = osstdout.communicate()[0].strip()
#return (theInfo, osstout.returncode)
#process = Popen(shlex.split(cmd), stdout=PIPE)
#process.communicate()    # execute it, the output goes to the stdout
#exit_code = process.wait()
#process = subprocess.check_output(cmd, shell=True)
#print process
if __name__ == '__main__':
    CHANNEL_NAME = sys.argv[0]
    CHANNELS = sys.argv[1]
    CHAINCODES = sys.argv[2]
    ENDORSERS = sys.argv[3]
    sys.argv.pop()
    sys.argv.pop()
    sys.argv.pop()
    sys.argv.pop()
    print CHANNEL_NAME
    print CHANNELS
    print CHAINCODES
    print ENDORSERS
    unittest.main()
